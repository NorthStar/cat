var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","blueprint","cssparser","compressor","customlayout","gridbuilder","namespace","semanticclassnames","validator","blueprintapp","blueprinthelpers","booklist","booklistscontroller","booklistshelper","comment","commentscontroller","commentshelper","department","departmentscontroller","departmentshelper","documentelement","background","dimension","elementhelpers","file","nilclass","review","reviewscontroller","reviewshelper","string","video","videoscontroller","videoshelper","welcomecontroller","welcomehelper","add_namespace()","background()","blank?()","blank?()","blueprint_command()","bottom()","call()","column_count()","column_width()","create()","create()","create()","create()","create()","css_from_assignments()","current_namespace()","current_response()","current_response=()","default?()","destination_path=()","destroy()","destroy()","destroy()","destroy()","edit()","edit()","edit()","edit()","element()","generate!()","generate!()","generate_grid_css()","gutter_width()","height()","html_page_content()","index()","index()","index()","index()","index()","input_border()","input_padding()","margin()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","page_width()","parse()","path_to_string()","remove_current_namespace()","show()","show()","show()","show()","string_to_file()","strip_selector_space!()","strip_side_space!()","strip_space!()","to_s()","top()","update()","update()","update()","update()","validate()","width()","readme_for_app"],"longSearchIndex":["applicationcontroller","applicationhelper","blueprint","blueprint::cssparser","blueprint::compressor","blueprint::customlayout","blueprint::gridbuilder","blueprint::namespace","blueprint::semanticclassnames","blueprint::validator","blueprintapp","blueprinthelpers","booklist","booklistscontroller","booklistshelper","comment","commentscontroller","commentshelper","department","departmentscontroller","departmentshelper","documentelement","documentelement::background","documentelement::dimension","elementhelpers","file","nilclass","review","reviewscontroller","reviewshelper","string","video","videoscontroller","videoshelper","welcomecontroller","welcomehelper","blueprint::namespace#add_namespace()","documentelement#background()","nilclass#blank?()","string#blank?()","blueprinthelpers#blueprint_command()","documentelement#bottom()","blueprintapp#call()","blueprint::customlayout#column_count()","blueprint::customlayout#column_width()","booklistscontroller#create()","commentscontroller#create()","departmentscontroller#create()","reviewscontroller#create()","videoscontroller#create()","blueprint::semanticclassnames#css_from_assignments()","blueprint::namespace#current_namespace()","blueprintapp::current_response()","blueprintapp::current_response=()","blueprint::customlayout#default?()","blueprint::compressor#destination_path=()","booklistscontroller#destroy()","commentscontroller#destroy()","reviewscontroller#destroy()","videoscontroller#destroy()","booklistscontroller#edit()","departmentscontroller#edit()","reviewscontroller#edit()","videoscontroller#edit()","elementhelpers#element()","blueprint::compressor#generate!()","blueprint::gridbuilder#generate!()","blueprint::customlayout#generate_grid_css()","blueprint::customlayout#gutter_width()","documentelement#height()","blueprinthelpers#html_page_content()","booklistscontroller#index()","departmentscontroller#index()","reviewscontroller#index()","videoscontroller#index()","welcomecontroller#index()","blueprint::customlayout#input_border()","blueprint::customlayout#input_padding()","documentelement#margin()","blueprint::cssparser::new()","blueprint::compressor::new()","blueprint::customlayout::new()","blueprint::gridbuilder::new()","blueprint::namespace::new()","blueprint::semanticclassnames::new()","blueprint::validator::new()","booklistscontroller#new()","departmentscontroller#new()","documentelement::new()","reviewscontroller#new()","videoscontroller#new()","blueprint::customlayout#page_width()","blueprint::cssparser#parse()","file::path_to_string()","blueprint::namespace#remove_current_namespace()","booklistscontroller#show()","departmentscontroller#show()","reviewscontroller#show()","videoscontroller#show()","file::string_to_file()","string#strip_selector_space!()","string#strip_side_space!()","string#strip_space!()","blueprint::cssparser#to_s()","documentelement#top()","booklistscontroller#update()","departmentscontroller#update()","reviewscontroller#update()","videoscontroller#update()","blueprint::validator#validate()","documentelement#width()",""],"info":[["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Blueprint","","Blueprint.html","",""],["Blueprint::CSSParser","","Blueprint/CSSParser.html","","<p>Strips out most whitespace and can return a hash or string of parsed data\n"],["Blueprint::Compressor","","Blueprint/Compressor.html","",""],["Blueprint::CustomLayout","","Blueprint/CustomLayout.html","","<p>Generates a custom grid file, using ERB to evaluate custom settings\n"],["Blueprint::GridBuilder","","Blueprint/GridBuilder.html","",""],["Blueprint::Namespace","","Blueprint/Namespace.html","",""],["Blueprint::SemanticClassNames","","Blueprint/SemanticClassNames.html","","<p>parses a hash of key/value pairs, key being output CSS selectors, value\nbeing a list of CSS selectors …\n"],["Blueprint::Validator","","Blueprint/Validator.html","","<p>Validates generated CSS against the W3 using Java\n"],["BlueprintApp","","BlueprintApp.html","",""],["BlueprintHelpers","","BlueprintHelpers.html","",""],["Booklist","","Booklist.html","",""],["BooklistsController","","BooklistsController.html","",""],["BooklistsHelper","","BooklistsHelper.html","",""],["Comment","","Comment.html","",""],["CommentsController","","CommentsController.html","",""],["CommentsHelper","","CommentsHelper.html","",""],["Department","","Department.html","",""],["DepartmentsController","","DepartmentsController.html","",""],["DepartmentsHelper","","DepartmentsHelper.html","",""],["DocumentElement","","DocumentElement.html","",""],["DocumentElement::Background","","DocumentElement/Background.html","",""],["DocumentElement::Dimension","","DocumentElement/Dimension.html","",""],["ElementHelpers","","ElementHelpers.html","",""],["File","","File.html","",""],["NilClass","","NilClass.html","",""],["Review","","Review.html","",""],["ReviewsController","","ReviewsController.html","",""],["ReviewsHelper","","ReviewsHelper.html","",""],["String","","String.html","",""],["Video","","Video.html","",""],["VideosController","","VideosController.html","",""],["VideosHelper","","VideosHelper.html","",""],["WelcomeController","","WelcomeController.html","",""],["WelcomeHelper","","WelcomeHelper.html","",""],["add_namespace","Blueprint::Namespace","Blueprint/Namespace.html#method-i-add_namespace","(html, namespace)","<p>adds namespace to BP classes in a html file\n"],["background","DocumentElement","DocumentElement.html#method-i-background","()",""],["blank?","NilClass","NilClass.html#method-i-blank-3F","()",""],["blank?","String","String.html#method-i-blank-3F","()","<p>see if string has any content\n"],["blueprint_command","BlueprintHelpers","BlueprintHelpers.html#method-i-blueprint_command","(options = nil)",""],["bottom","DocumentElement","DocumentElement.html#method-i-bottom","()",""],["call","BlueprintApp","BlueprintApp.html#method-i-call","(env)",""],["column_count","Blueprint::CustomLayout","Blueprint/CustomLayout.html#method-i-column_count","()","<p>Column count of generated CSS.  Returns itself or Blueprint&#39;s default\n"],["column_width","Blueprint::CustomLayout","Blueprint/CustomLayout.html#method-i-column_width","()","<p>Column width (in pixels) of generated CSS.  Returns itself or\nBlueprint&#39;s default\n"],["create","BooklistsController","BooklistsController.html#method-i-create","()",""],["create","CommentsController","CommentsController.html#method-i-create","()",""],["create","DepartmentsController","DepartmentsController.html#method-i-create","()",""],["create","ReviewsController","ReviewsController.html#method-i-create","()",""],["create","VideosController","VideosController.html#method-i-create","()",""],["css_from_assignments","Blueprint::SemanticClassNames","Blueprint/SemanticClassNames.html#method-i-css_from_assignments","(assignments = {})","<p>Returns a CSS string of semantic selectors and associated styles\n<p>Options\n<p><code>assignments</code> – Hash of key/value …\n"],["current_namespace","Blueprint::Namespace","Blueprint/Namespace.html#method-i-current_namespace","(html)","<p>returns current namespace in test files based on container class\n"],["current_response","BlueprintApp","BlueprintApp.html#method-c-current_response","()",""],["current_response=","BlueprintApp","BlueprintApp.html#method-c-current_response-3D","(resp)",""],["default?","Blueprint::CustomLayout","Blueprint/CustomLayout.html#method-i-default-3F","()","<p>Boolean value if current settings are Blueprint&#39;s defaults\n"],["destination_path=","Blueprint::Compressor","Blueprint/Compressor.html#method-i-destination_path-3D","(path)","<p>overridden setter method for destination_path also sets custom_path flag on\nBlueprint::Compressor instance …\n"],["destroy","BooklistsController","BooklistsController.html#method-i-destroy","()",""],["destroy","CommentsController","CommentsController.html#method-i-destroy","()",""],["destroy","ReviewsController","ReviewsController.html#method-i-destroy","()",""],["destroy","VideosController","VideosController.html#method-i-destroy","()",""],["edit","BooklistsController","BooklistsController.html#method-i-edit","()",""],["edit","DepartmentsController","DepartmentsController.html#method-i-edit","()",""],["edit","ReviewsController","ReviewsController.html#method-i-edit","()",""],["edit","VideosController","VideosController.html#method-i-edit","()",""],["element","ElementHelpers","ElementHelpers.html#method-i-element","(selector)",""],["generate!","Blueprint::Compressor","Blueprint/Compressor.html#method-i-generate-21","()","<p>generates output CSS based on any args passed in overwrites any existing\nCSS, as well as grid.png and …\n"],["generate!","Blueprint::GridBuilder","Blueprint/GridBuilder.html#method-i-generate-21","()","<p>generates (overwriting if necessary) grid.png image to be tiled in\nbackground\n"],["generate_grid_css","Blueprint::CustomLayout","Blueprint/CustomLayout.html#method-i-generate_grid_css","()","<p>Loads grid.css.erb file, binds it to current instance, and returns output\n"],["gutter_width","Blueprint::CustomLayout","Blueprint/CustomLayout.html#method-i-gutter_width","()","<p>Gutter width (in pixels) of generated CSS.  Returns itself or\nBlueprint&#39;s default\n"],["height","DocumentElement","DocumentElement.html#method-i-height","()",""],["html_page_content","BlueprintHelpers","BlueprintHelpers.html#method-i-html_page_content","()",""],["index","BooklistsController","BooklistsController.html#method-i-index","()",""],["index","DepartmentsController","DepartmentsController.html#method-i-index","()",""],["index","ReviewsController","ReviewsController.html#method-i-index","()",""],["index","VideosController","VideosController.html#method-i-index","()",""],["index","WelcomeController","WelcomeController.html#method-i-index","()",""],["input_border","Blueprint::CustomLayout","Blueprint/CustomLayout.html#method-i-input_border","()",""],["input_padding","Blueprint::CustomLayout","Blueprint/CustomLayout.html#method-i-input_padding","()",""],["margin","DocumentElement","DocumentElement.html#method-i-margin","()",""],["new","Blueprint::CSSParser","Blueprint/CSSParser.html#method-c-new","(css_string = \"\", options = {})","<p>Options\n<p><code>css_string</code> String of CSS data\n<p><code>options</code>\n"],["new","Blueprint::Compressor","Blueprint/Compressor.html#method-c-new","()","<p>constructor\n"],["new","Blueprint::CustomLayout","Blueprint/CustomLayout.html#method-c-new","(options = {})","<p>Options\n<p><code>options</code>\n<p><code>:column_count</code> – Sets the column count of generated CSS\n"],["new","Blueprint::GridBuilder","Blueprint/GridBuilder.html#method-c-new","(options={})","<p>Options\n<p><code>options</code>\n<p><code>:column_width</code> – Width (in pixels) of current grid column\n"],["new","Blueprint::Namespace","Blueprint/Namespace.html#method-c-new","(path, namespace)","<p>Read html to string, remove namespace if any, set the new namespace, and\nupdate the test file.\n"],["new","Blueprint::SemanticClassNames","Blueprint/SemanticClassNames.html#method-c-new","(options = {})","<p>Options\n<p><code>options</code>\n<p><code>:namespace</code> – Namespace to be used when matching CSS selectors\nto draw from\n"],["new","Blueprint::Validator","Blueprint/Validator.html#method-c-new","()",""],["new","BooklistsController","BooklistsController.html#method-i-new","()",""],["new","DepartmentsController","DepartmentsController.html#method-i-new","()",""],["new","DocumentElement","DocumentElement.html#method-c-new","(page, selector)",""],["new","ReviewsController","ReviewsController.html#method-i-new","()",""],["new","VideosController","VideosController.html#method-i-new","()",""],["page_width","Blueprint::CustomLayout","Blueprint/CustomLayout.html#method-i-page_width","()","<p>Returns page width (in pixels)\n"],["parse","Blueprint::CSSParser","Blueprint/CSSParser.html#method-i-parse","(data = nil)","<p>returns a hash of all CSS data passed\n<p>Options\n<p><code>data</code> – CSS string; defaults to string passed into the\nconstructor …\n"],["path_to_string","File","File.html#method-c-path_to_string","(path)","<p>string output from file\n"],["remove_current_namespace","Blueprint::Namespace","Blueprint/Namespace.html#method-i-remove_current_namespace","(html)","<p>removes a namespace from a string of html\n"],["show","BooklistsController","BooklistsController.html#method-i-show","()",""],["show","DepartmentsController","DepartmentsController.html#method-i-show","()",""],["show","ReviewsController","ReviewsController.html#method-i-show","()",""],["show","VideosController","VideosController.html#method-i-show","()",""],["string_to_file","File","File.html#method-c-string_to_file","(string, path)","<p>saves a string to a specified file path\n"],["strip_selector_space!","String","String.html#method-i-strip_selector_space-21","()","<p>remove newlines, insert space after comma, replace two spaces with one\nspace after comma\n"],["strip_side_space!","String","String.html#method-i-strip_side_space-21","()","<p>remove leading whitespace, remove end whitespace\n"],["strip_space!","String","String.html#method-i-strip_space-21","()","<p>strip space after :, remove newlines, replace multiple spaces with only one\nspace, remove comments\n"],["to_s","Blueprint::CSSParser","Blueprint/CSSParser.html#method-i-to_s","()","<p>returns string of CSS which can be saved to a file or otherwise\n"],["top","DocumentElement","DocumentElement.html#method-i-top","()",""],["update","BooklistsController","BooklistsController.html#method-i-update","()",""],["update","DepartmentsController","DepartmentsController.html#method-i-update","()",""],["update","ReviewsController","ReviewsController.html#method-i-update","()",""],["update","VideosController","VideosController.html#method-i-update","()",""],["validate","Blueprint::Validator","Blueprint/Validator.html#method-i-validate","()","<p>Validates all three CSS files\n"],["width","DocumentElement","DocumentElement.html#method-i-width","()",""],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}